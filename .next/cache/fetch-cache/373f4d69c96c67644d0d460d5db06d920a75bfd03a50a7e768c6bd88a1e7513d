{"kind":"FETCH","data":{"headers":{"alt-svc":"h3=\":443\"; ma=86400","cache-control":"public, max-age=26362","connection":"keep-alive","content-encoding":"br","content-type":"application/json;charset=utf-8","date":"Mon, 15 Jan 2024 19:16:29 GMT","etag":"W/\"ef7440722a79b8aa2704582562926428\"","server":"openresty","transfer-encoding":"chunked","vary":"Accept-Encoding, Origin","via":"1.1 caab54916712329d6fb0ff230c2db54c.cloudfront.net (CloudFront)","x-amz-cf-id":"ahWru8EiDE5OMLBcwcGDROq4YO4qjkYnhILLivIwPie3Pxc-t99VUg==","x-amz-cf-pop":"LHR5-P4","x-cache":"Miss from cloudfront","x-memc":"HIT","x-memc-age":"87","x-memc-expires":"26362","x-memc-key":"37aae80e1f2015f3239e3a9f2a963590"},"body":"","status":200,"url":"https://api.themoviedb.org/3/person/500/tv_credits?api_key=7f7ee1dafc77183119a173cafe9e02a1&language=en-US"},"revalidate":31536000,"tags":[]}